returnsTest <- as.zoo(stock[(trainingSet+1):(trainingSet+testSet)])   # Test dataset 10%
fit <- arima(returnsTrain, order = c(13,0,15))
arma_forecast <- forecast(fit, h = testSet, level = c(95,80))
par(mfrow=c(1,1))
plot(arma_forecast, main = paste("ARMA forecasts for", colnames(stock),  "returns"))
legend("topleft", c("Real","Predict"), col=c("black", "deepskyblue3"), lty=1, lwd = 3 ,title = "Data")
lines(returnsTest)
print("Accuracy:")
print(accuracy(arma_forecast, returnsTest) )
print(accuracy(arma_forecast, returnsTest)[2])
}
runApp()
runApp()
runApp()
# Portfolio Optimization
userPortfolioOptimization <- function(stockReturns, budget){
dateEnd <- end_date-2
stockReturns <- (ccStocksReturns[,stockReturns])
stockAdj <- (ccStocksReturns[,stockReturns])
# Markowitz optimal portfolio con impostazioni di default
Mop <- portfolio.optim( x=stockReturns)
# costruiamo la frontiera efficiente e poniamo Mop su essa
rs <- seq(0.0,1.0,length.out=250)
risk <- numeric(length(rs))+NA
for( i in 1:length(rs) ) {
p <- NULL
try( p <- portfolio.optim( x=stockReturns, pm=rs[i], shorts = FALSE) )
if( is.null(p) ) {
risk[i] <- NA
} else {
risk[i] <- p$ps
}
}
par(mfrow=c(1,1))
par(mar = c(5, 5, 2, 2))
plot( risk, rs, pch=20, col="blue", xlab="Risk (sigma)", ylab="Return (mean)"
, main = "Risk-Mean plane", )
points( Mop$ps, Mop$pm, pch=17, col="red" )
shares <- spesa <- c(rep(NA, (dim(stockReturns)[2])))
investimento <- 0
for(i in 1:(dim(stockReturns)[2])){
shares[i] <- round(floor((budget * Mop$pw[i])/as.numeric(stockAdj[dateEnd, i])),3)
spesa[i] <- round(shares[i] * as.numeric(stockAdj[dateEnd, i]), 3)
investimento <- round((investimento + spesa[i]),3)
print(paste(colnames(stockReturns)[i], ":", shares[i], "quote a:",
as.numeric(stockAdj[dateEnd, i]), "$ con una spesa di:", spesa[i]))
print(paste("Il peso di", colnames(stockReturns)[i], "nel portafoglio è di:",
round(Mop$pw[i], 3)))
print("------------------------------------------------------------------")
}
print(paste("Il ritorno del portafoglio (ideale) è del:", round((Mop$pm*100),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno ideale è di:", round((Mop$pm),3)*budget+budget, "$"))
print(paste("Il ritorno del portafoglio (reale) è del:", round((Mop$pm*99),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno reale è di:", round((Mop$pm*0.99),3)*budget+budget, "$"))
}
colnames(mergedStocksAdj)
userPortfolioOptimization(c("PEP", "ALGT", "AMD", "NVDA"), 1000)
# Portfolio Optimization
userPortfolioOptimization <- function(stockReturns, budget){
dateEnd <- end_date-2
stockReturns <- (simpleStocksReturnsYear[,stockReturns])
stockAdj <- (mergedStocksAdj[,stockReturns])
# Markowitz optimal portfolio con impostazioni di default
Mop <- portfolio.optim( x=stockReturns)
# costruiamo la frontiera efficiente e poniamo Mop su essa
rs <- seq(0.0,1.0,length.out=250)
risk <- numeric(length(rs))+NA
for( i in 1:length(rs) ) {
p <- NULL
try( p <- portfolio.optim( x=stockReturns, pm=rs[i], shorts = FALSE) )
if( is.null(p) ) {
risk[i] <- NA
} else {
risk[i] <- p$ps
}
}
par(mfrow=c(1,1))
par(mar = c(5, 5, 2, 2))
plot( risk, rs, pch=20, col="blue", xlab="Risk (sigma)", ylab="Return (mean)"
, main = "Risk-Mean plane", )
points( Mop$ps, Mop$pm, pch=17, col="red" )
shares <- spesa <- c(rep(NA, (dim(stockReturns)[2])))
investimento <- 0
for(i in 1:(dim(stockReturns)[2])){
shares[i] <- round(floor((budget * Mop$pw[i])/as.numeric(stockAdj[dateEnd, i])),3)
spesa[i] <- round(shares[i] * as.numeric(stockAdj[dateEnd, i]), 3)
investimento <- round((investimento + spesa[i]),3)
print(paste(colnames(stockReturns)[i], ":", shares[i], "quote a:",
as.numeric(stockAdj[dateEnd, i]), "$ con una spesa di:", spesa[i]))
print(paste("Il peso di", colnames(stockReturns)[i], "nel portafoglio è di:",
round(Mop$pw[i], 3)))
print("------------------------------------------------------------------")
}
print(paste("Il ritorno del portafoglio (ideale) è del:", round((Mop$pm*100),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno ideale è di:", round((Mop$pm),3)*budget+budget, "$"))
print(paste("Il ritorno del portafoglio (reale) è del:", round((Mop$pm*99),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno reale è di:", round((Mop$pm*0.99),3)*budget+budget, "$"))
}
dev.off()
plotSimpleCCReturns(stocks, stocks, arrayColors)
plotCCReturns(ccStocksReturns)
dev.off()
userPortfolioOptimization(c("PEP", "ALGT", "AMD", "NVDA"), 1000)
runApp()
# Portfolio Optimization
userPortfolioOptimization <- function(stockReturns, budget){
print(1)
dateEnd <- end_date-2
print(2)
stockReturns <- (simpleStocksReturnsYear[,stockReturns])
print(3)
stockAdj <- (mergedStocksAdj[,stockReturns])
print(4)
# Markowitz optimal portfolio con impostazioni di default
Mop <- portfolio.optim( x=stockReturns)
# costruiamo la frontiera efficiente e poniamo Mop su essa
rs <- seq(0.0,1.0,length.out=250)
risk <- numeric(length(rs))+NA
for( i in 1:length(rs) ) {
p <- NULL
try( p <- portfolio.optim( x=stockReturns, pm=rs[i], shorts = FALSE) )
if( is.null(p) ) {
risk[i] <- NA
} else {
risk[i] <- p$ps
}
}
par(mfrow=c(1,1))
par(mar = c(5, 5, 2, 2))
plot( risk, rs, pch=20, col="blue", xlab="Risk (sigma)", ylab="Return (mean)"
, main = "Risk-Mean plane", )
points( Mop$ps, Mop$pm, pch=17, col="red" )
shares <- spesa <- c(rep(NA, (dim(stockReturns)[2])))
investimento <- 0
for(i in 1:(dim(stockReturns)[2])){
shares[i] <- round(floor((budget * Mop$pw[i])/as.numeric(stockAdj[dateEnd, i])),3)
spesa[i] <- round(shares[i] * as.numeric(stockAdj[dateEnd, i]), 3)
investimento <- round((investimento + spesa[i]),3)
print(paste(colnames(stockReturns)[i], ":", shares[i], "quote a:",
as.numeric(stockAdj[dateEnd, i]), "$ con una spesa di:", spesa[i]))
print(paste("Il peso di", colnames(stockReturns)[i], "nel portafoglio è di:",
round(Mop$pw[i], 3)))
print("------------------------------------------------------------------")
}
print(paste("Il ritorno del portafoglio (ideale) è del:", round((Mop$pm*100),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno ideale è di:", round((Mop$pm),3)*budget+budget, "$"))
print(paste("Il ritorno del portafoglio (reale) è del:", round((Mop$pm*99),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno reale è di:", round((Mop$pm*0.99),3)*budget+budget, "$"))
}
userPortfolioOptimization(c("PEP", "ALGT", "AMD", "NVDA"), 1000)
mergedStocksAdj$PEP
# Portfolio Optimization
userPortfolioOptimization <- function(stockReturns, budget){
print(1)
dateEnd <- end_date-2
print(2)
stockReturns <- simpleStocksReturnsYear[,stockReturns]
print(3)
stockAdj <- mergedStocksAdj[,stockReturns]
print(4)
# Markowitz optimal portfolio con impostazioni di default
Mop <- portfolio.optim( x=stockReturns)
# costruiamo la frontiera efficiente e poniamo Mop su essa
rs <- seq(0.0,1.0,length.out=250)
risk <- numeric(length(rs))+NA
for( i in 1:length(rs) ) {
p <- NULL
try( p <- portfolio.optim( x=stockReturns, pm=rs[i], shorts = FALSE) )
if( is.null(p) ) {
risk[i] <- NA
} else {
risk[i] <- p$ps
}
}
par(mfrow=c(1,1))
par(mar = c(5, 5, 2, 2))
plot( risk, rs, pch=20, col="blue", xlab="Risk (sigma)", ylab="Return (mean)"
, main = "Risk-Mean plane", )
points( Mop$ps, Mop$pm, pch=17, col="red" )
shares <- spesa <- c(rep(NA, (dim(stockReturns)[2])))
investimento <- 0
for(i in 1:(dim(stockReturns)[2])){
shares[i] <- round(floor((budget * Mop$pw[i])/as.numeric(stockAdj[dateEnd, i])),3)
spesa[i] <- round(shares[i] * as.numeric(stockAdj[dateEnd, i]), 3)
investimento <- round((investimento + spesa[i]),3)
print(paste(colnames(stockReturns)[i], ":", shares[i], "quote a:",
as.numeric(stockAdj[dateEnd, i]), "$ con una spesa di:", spesa[i]))
print(paste("Il peso di", colnames(stockReturns)[i], "nel portafoglio è di:",
round(Mop$pw[i], 3)))
print("------------------------------------------------------------------")
}
print(paste("Il ritorno del portafoglio (ideale) è del:", round((Mop$pm*100),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno ideale è di:", round((Mop$pm),3)*budget+budget, "$"))
print(paste("Il ritorno del portafoglio (reale) è del:", round((Mop$pm*99),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno reale è di:", round((Mop$pm*0.99),3)*budget+budget, "$"))
}
userPortfolioOptimization(c("PEP", "ALGT", "AMD", "NVDA"), 1000)
x <- c("PEP", "ALGT", "AMD", "NVDA")
userPortfolioOptimization(x, 1000)
head(mergedStocksAdj[,x])
(mergedStocksAdj[,x])
# Portfolio Optimization
userPortfolioOptimization <- function(stockReturns, budget){
print(stockReturns)
print(1)
dateEnd <- end_date-2
print(2)
stockReturns <- simpleStocksReturnsYear[,stockReturns]
print(3)
stockAdj <- mergedStocksAdj[,stockReturns]
print(4)
# Markowitz optimal portfolio con impostazioni di default
Mop <- portfolio.optim( x=stockReturns)
# costruiamo la frontiera efficiente e poniamo Mop su essa
rs <- seq(0.0,1.0,length.out=250)
risk <- numeric(length(rs))+NA
for( i in 1:length(rs) ) {
p <- NULL
try( p <- portfolio.optim( x=stockReturns, pm=rs[i], shorts = FALSE) )
if( is.null(p) ) {
risk[i] <- NA
} else {
risk[i] <- p$ps
}
}
par(mfrow=c(1,1))
par(mar = c(5, 5, 2, 2))
plot( risk, rs, pch=20, col="blue", xlab="Risk (sigma)", ylab="Return (mean)"
, main = "Risk-Mean plane", )
points( Mop$ps, Mop$pm, pch=17, col="red" )
shares <- spesa <- c(rep(NA, (dim(stockReturns)[2])))
investimento <- 0
for(i in 1:(dim(stockReturns)[2])){
shares[i] <- round(floor((budget * Mop$pw[i])/as.numeric(stockAdj[dateEnd, i])),3)
spesa[i] <- round(shares[i] * as.numeric(stockAdj[dateEnd, i]), 3)
investimento <- round((investimento + spesa[i]),3)
print(paste(colnames(stockReturns)[i], ":", shares[i], "quote a:",
as.numeric(stockAdj[dateEnd, i]), "$ con una spesa di:", spesa[i]))
print(paste("Il peso di", colnames(stockReturns)[i], "nel portafoglio è di:",
round(Mop$pw[i], 3)))
print("------------------------------------------------------------------")
}
print(paste("Il ritorno del portafoglio (ideale) è del:", round((Mop$pm*100),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno ideale è di:", round((Mop$pm),3)*budget+budget, "$"))
print(paste("Il ritorno del portafoglio (reale) è del:", round((Mop$pm*99),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno reale è di:", round((Mop$pm*0.99),3)*budget+budget, "$"))
}
userPortfolioOptimization(x, 1000)
# Portfolio Optimization
userPortfolioOptimization <- function(stockReturns, budget){
print(stockReturns)
print(1)
dateEnd <- end_date-2
print(2)
stockReturns <- simpleStocksReturnsYear[,stockReturns]
print(3)
stockAdj <- mergedStocksAdj[,stockReturns]
print(4)
# Markowitz optimal portfolio con impostazioni di default
Mop <- portfolio.optim( x=stockReturns)
# costruiamo la frontiera efficiente e poniamo Mop su essa
rs <- seq(0.0,1.0,length.out=250)
risk <- numeric(length(rs))+NA
for( i in 1:length(rs) ) {
p <- NULL
try( p <- portfolio.optim( x=stockReturns, pm=rs[i], shorts = FALSE) )
if( is.null(p) ) {
risk[i] <- NA
} else {
risk[i] <- p$ps
}
}
par(mfrow=c(1,1))
par(mar = c(5, 5, 2, 2))
plot( risk, rs, pch=20, col="blue", xlab="Risk (sigma)", ylab="Return (mean)"
, main = "Risk-Mean plane", )
points( Mop$ps, Mop$pm, pch=17, col="red" )
shares <- spesa <- c(rep(NA, (dim(stockReturns)[2])))
investimento <- 0
for(i in 1:(dim(stockReturns)[2])){
shares[i] <- round(floor((budget * Mop$pw[i])/as.numeric(stockAdj[dateEnd, i])),3)
spesa[i] <- round(shares[i] * as.numeric(stockAdj[dateEnd, i]), 3)
investimento <- round((investimento + spesa[i]),3)
print(paste(colnames(stockReturns)[i], ":", shares[i], "quote a:",
as.numeric(stockAdj[dateEnd, i]), "$ con una spesa di:", spesa[i]))
print(paste("Il peso di", colnames(stockReturns)[i], "nel portafoglio è di:",
round(Mop$pw[i], 3)))
print("------------------------------------------------------------------")
}
print(paste("Il ritorno del portafoglio (ideale) è del:", round((Mop$pm*100),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno ideale è di:", round((Mop$pm),3)*budget+budget, "$"))
print(paste("Il ritorno del portafoglio (reale) è del:", round((Mop$pm*99),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno reale è di:", round((Mop$pm*0.99),3)*budget+budget, "$"))
}
x <- c("PEP", "ALGT", "AMD", "NVDA")
userPortfolioOptimization(x, 1000)
userPortfolioOptimization(x, 1000)
# Portfolio Optimization
userPortfolioOptimization <- function(stockReturns, budget){
print(stockReturns)
print(1)
dateEnd <- end_date-2
print(2)
stockReturns <- simpleStocksReturnsYear[,stockReturns]
print(3)
stockAdj <- mergedStocksAdj[,stockReturns]
print(4)
# Markowitz optimal portfolio con impostazioni di default
Mop <- portfolio.optim( x=stockReturns)
# costruiamo la frontiera efficiente e poniamo Mop su essa
rs <- seq(0.0,1.0,length.out=250)
risk <- numeric(length(rs))+NA
for( i in 1:length(rs) ) {
p <- NULL
try( p <- portfolio.optim( x=stockReturns, pm=rs[i], shorts = FALSE) )
if( is.null(p) ) {
risk[i] <- NA
} else {
risk[i] <- p$ps
}
}
par(mfrow=c(1,1))
par(mar = c(5, 5, 2, 2))
plot( risk, rs, pch=20, col="blue", xlab="Risk (sigma)", ylab="Return (mean)"
, main = "Risk-Mean plane", )
points( Mop$ps, Mop$pm, pch=17, col="red" )
shares <- spesa <- c(rep(NA, (dim(stockReturns)[2])))
investimento <- 0
for(i in 1:(dim(stockReturns)[2])){
shares[i] <- round(floor((budget * Mop$pw[i])/as.numeric(stockAdj[dateEnd, i])),3)
spesa[i] <- round(shares[i] * as.numeric(stockAdj[dateEnd, i]), 3)
investimento <- round((investimento + spesa[i]),3)
print(paste(colnames(stockReturns)[i], ":", shares[i], "quote a:",
as.numeric(stockAdj[dateEnd, i]), "$ con una spesa di:", spesa[i]))
print(paste("Il peso di", colnames(stockReturns)[i], "nel portafoglio è di:",
round(Mop$pw[i], 3)))
print("------------------------------------------------------------------")
}
print(paste("Il ritorno del portafoglio (ideale) è del:", round((Mop$pm*100),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno ideale è di:", round((Mop$pm),3)*budget+budget, "$"))
print(paste("Il ritorno del portafoglio (reale) è del:", round((Mop$pm*99),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno reale è di:", round((Mop$pm*0.99),3)*budget+budget, "$"))
}
userPortfolioOptimization(x, 1000)
runApp()
# Portfolio Optimization
userPortfolioOptimization <- function(stockReturns, budget){
print(stockReturns)
print(1)
dateEnd <- end_date-2
print(2)
stockReturns <- simpleStocksReturnsYear[,stockReturns]
print(3)
stockAdj <- simpleStocksReturnsYear[,stockReturns]
print(4)
# Markowitz optimal portfolio con impostazioni di default
Mop <- portfolio.optim( x=stockReturns)
# costruiamo la frontiera efficiente e poniamo Mop su essa
rs <- seq(0.0,1.0,length.out=250)
risk <- numeric(length(rs))+NA
for( i in 1:length(rs) ) {
p <- NULL
try( p <- portfolio.optim( x=stockReturns, pm=rs[i], shorts = FALSE) )
if( is.null(p) ) {
risk[i] <- NA
} else {
risk[i] <- p$ps
}
}
par(mfrow=c(1,1))
par(mar = c(5, 5, 2, 2))
plot( risk, rs, pch=20, col="blue", xlab="Risk (sigma)", ylab="Return (mean)"
, main = "Risk-Mean plane", )
points( Mop$ps, Mop$pm, pch=17, col="red" )
shares <- spesa <- c(rep(NA, (dim(stockReturns)[2])))
investimento <- 0
for(i in 1:(dim(stockReturns)[2])){
shares[i] <- round(floor((budget * Mop$pw[i])/as.numeric(stockAdj[dateEnd, i])),3)
spesa[i] <- round(shares[i] * as.numeric(stockAdj[dateEnd, i]), 3)
investimento <- round((investimento + spesa[i]),3)
print(paste(colnames(stockReturns)[i], ":", shares[i], "quote a:",
as.numeric(stockAdj[dateEnd, i]), "$ con una spesa di:", spesa[i]))
print(paste("Il peso di", colnames(stockReturns)[i], "nel portafoglio è di:",
round(Mop$pw[i], 3)))
print("------------------------------------------------------------------")
}
print(paste("Il ritorno del portafoglio (ideale) è del:", round((Mop$pm*100),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno ideale è di:", round((Mop$pm),3)*budget+budget, "$"))
print(paste("Il ritorno del portafoglio (reale) è del:", round((Mop$pm*99),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno reale è di:", round((Mop$pm*0.99),3)*budget+budget, "$"))
}
x <- c("PEP", "ALGT", "AMD", "NVDA")
userPortfolioOptimization(x, 1000)
# Portfolio Optimization
userPortfolioOptimization <- function(stockReturns, budget, stock2){
print(stockReturns)
print(1)
dateEnd <- end_date-2
print(2)
stockReturns <- simpleStocksReturnsYear[,stockReturns]
print(3)
stockAdj <- mergedStocksAdj[,stock2]
print(4)
# Markowitz optimal portfolio con impostazioni di default
Mop <- portfolio.optim( x=stockReturns)
# costruiamo la frontiera efficiente e poniamo Mop su essa
rs <- seq(0.0,1.0,length.out=250)
risk <- numeric(length(rs))+NA
for( i in 1:length(rs) ) {
p <- NULL
try( p <- portfolio.optim( x=stockReturns, pm=rs[i], shorts = FALSE) )
if( is.null(p) ) {
risk[i] <- NA
} else {
risk[i] <- p$ps
}
}
par(mfrow=c(1,1))
par(mar = c(5, 5, 2, 2))
plot( risk, rs, pch=20, col="blue", xlab="Risk (sigma)", ylab="Return (mean)"
, main = "Risk-Mean plane", )
points( Mop$ps, Mop$pm, pch=17, col="red" )
shares <- spesa <- c(rep(NA, (dim(stockReturns)[2])))
investimento <- 0
for(i in 1:(dim(stockReturns)[2])){
shares[i] <- round(floor((budget * Mop$pw[i])/as.numeric(stockAdj[dateEnd, i])),3)
spesa[i] <- round(shares[i] * as.numeric(stockAdj[dateEnd, i]), 3)
investimento <- round((investimento + spesa[i]),3)
print(paste(colnames(stockReturns)[i], ":", shares[i], "quote a:",
as.numeric(stockAdj[dateEnd, i]), "$ con una spesa di:", spesa[i]))
print(paste("Il peso di", colnames(stockReturns)[i], "nel portafoglio è di:",
round(Mop$pw[i], 3)))
print("------------------------------------------------------------------")
}
print(paste("Il ritorno del portafoglio (ideale) è del:", round((Mop$pm*100),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno ideale è di:", round((Mop$pm),3)*budget+budget, "$"))
print(paste("Il ritorno del portafoglio (reale) è del:", round((Mop$pm*99),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno reale è di:", round((Mop$pm*0.99),3)*budget+budget, "$"))
}
userPortfolioOptimization(x, 1000, x)
# Portfolio Optimization
userPortfolioOptimization <- function(stockReturns, budget){
x <- stockReturns
dateEnd <- end_date-2
stockReturns <- simpleStocksReturnsYear[,x]
stockAdj <- mergedStocksAdj[,x]
# Markowitz optimal portfolio con impostazioni di default
Mop <- portfolio.optim( x=stockReturns)
# costruiamo la frontiera efficiente e poniamo Mop su essa
rs <- seq(0.0,1.0,length.out=250)
risk <- numeric(length(rs))+NA
for( i in 1:length(rs) ) {
p <- NULL
try( p <- portfolio.optim( x=stockReturns, pm=rs[i], shorts = FALSE) )
if( is.null(p) ) {
risk[i] <- NA
} else {
risk[i] <- p$ps
}
}
par(mfrow=c(1,1))
par(mar = c(5, 5, 2, 2))
plot( risk, rs, pch=20, col="blue", xlab="Risk (sigma)", ylab="Return (mean)"
, main = "Risk-Mean plane", )
points( Mop$ps, Mop$pm, pch=17, col="red" )
shares <- spesa <- c(rep(NA, (dim(stockReturns)[2])))
investimento <- 0
for(i in 1:(dim(stockReturns)[2])){
shares[i] <- round(floor((budget * Mop$pw[i])/as.numeric(stockAdj[dateEnd, i])),3)
spesa[i] <- round(shares[i] * as.numeric(stockAdj[dateEnd, i]), 3)
investimento <- round((investimento + spesa[i]),3)
print(paste(colnames(stockReturns)[i], ":", shares[i], "quote a:",
as.numeric(stockAdj[dateEnd, i]), "$ con una spesa di:", spesa[i]))
print(paste("Il peso di", colnames(stockReturns)[i], "nel portafoglio è di:",
round(Mop$pw[i], 3)))
print("------------------------------------------------------------------")
}
print(paste("Il ritorno del portafoglio (ideale) è del:", round((Mop$pm*100),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno ideale è di:", round((Mop$pm),3)*budget+budget, "$"))
print(paste("Il ritorno del portafoglio (reale) è del:", round((Mop$pm*99),3),
"%, con il", round((Mop$ps*100),3), "% di rischio"))
print(paste("Su ", budget, "$ di investimento il ritorno reale è di:", round((Mop$pm*0.99),3)*budget+budget, "$"))
}
userPortfolioOptimization(x, 1000)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
